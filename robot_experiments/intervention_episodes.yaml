# env
env: drq-robosuite
# IMPORTANT: if action_repeat is used the effective number of env steps needs to be
# multiplied by action_repeat in the result graphs.
# This is a common practice for a fair comparison.
# See the 2nd paragraph in Appendix C of SLAC: https://arxiv.org/pdf/1907.00953.pdf
# See Dreamer TF2's implementation: https://github.com/danijar/dreamer/blob/02f0210f5991c7710826ca7881f19c64a012290c/dreamer.py#L340
action_repeat: 1 #not used for now 
# train
num_train_steps: 5000000
num_train_iters: 1
num_seed_steps: 1000
replay_buffer_capacity: 3750
seed: ??
# eval
eval_frequency: 10000
num_eval_episodes: 2
# misc
log_frequency_step: 10000
log_save_tb: true
save_video: true
device: cuda
# observation
image_size: 84
image_pad: 4
horizon: 100 #doesn't impact anything but is necessary for the code to run  

use_lowdim: true
# global params
lr: 1e-3
batch_size: 16


#things you shouldn't adjust 
lowdim_stack: 10 #how many past lowdim stuff do you want to conatenate
frame_stack: 3
system: real #sim for the mujoco stuff, and "real" for franka
use_squashed: True
sparseProp: 0.75
raw_lowdim: 7

# audio stuff 
audio_feature_dim: 10
audio_steps: ??
audio_bins: ??
audio_shape: ?? 

###### RUN CHANGES HERE ##### 
#core adjustemnts 
stack: 10
episodeLength: 75  
setup_name: FrankaKeyQuietMove2
number_demos: 50

results_root: /iris/u/maxjdu/communal_results/
demos_root: /iris/u/maxjdu/communal_demos/

num_corrections: 50
train_per_step: 150
eval_frequency: 5
eval_episodes: 20

# logging stuff 
load_folder: FrankaKeyQuietMove2_50_30_ABLATE_VIDEO
checkpoint: 20
load_dir: ${load_folder}/4_CORRECTIONS_1/${checkpoint}_ #this should change as I start training
# load_dir: ${load_folder}/${checkpoint}_ #this should change as I start training 
first_time: False #when this is true, you copy over the buffer and add it to a new buffer 
demo_file: ${demos_root}${setup_name}_${number_demos}/demos_finished.pkl
demo_file_working: ${load_folder}/4_CORRECTIONS_1/demos_backup.pkl #this is the file that contains the working replay buffer that we are modifying 
runName: ${load_folder}/4_CORRECTIONS_1

#Other hyperparameters
num_new_workers: 2 
num_old_workers: 2

# agent configuration
agent:
  name: drq
  class: core.drq_audio_memory.DRQAgent
  params:
    obs_shape: ??? # to be specified later
    action_shape: ??? # to be specified later
    action_range: ??? # to be specified later
    lowdim_dim: ??? #to b e specified later
    device: ${device}
    encoder_cfg: ${encoder}
    critic_cfg: ${critic}
    actor_cfg: ${actor}
    discount: 0.99
    init_temperature: 0.1
    lr: ${lr}
    actor_update_frequency: 2
    critic_tau: 0.01
    critic_target_update_frequency: 2
    batch_size: ${batch_size}
    log_frequency: 20
#    preload_actor: ${preload_actor}

critic:
  class: core.drq_audio_memory.Critic
  params:
    encoder_cfg: ${agent.params.encoder_cfg}
    action_shape: ${agent.params.action_shape}
    hidden_dim: 1024
    hidden_depth: 2

actor:
  class: core.drq_audio_memory.Actor
  params:
    encoder_cfg: ${agent.params.encoder_cfg}
    action_shape: ${agent.params.action_shape}
    hidden_depth: 2
    hidden_dim: 1024
    log_std_bounds: [-10, 2]

# encoder:
#   class: core.drq_audio_memory.Encoder
#   params:
#       obs_shape: ${agent.params.obs_shape}
#       feature_dim: 50
#       lowdim_dim: ${agent.params.lowdim_dim}
#       num_layers: 4
#       num_filters: 32
#       output_dim: 35
#       output_logits: False

# audioencoder:
#   class: core.drq_audio_memory.AudioEncoder
#   params:
#       audio_steps: ${audio_steps}
#       audio_bins: ${audio_bins}
#       audio_feature_dim: ${audio_feature_dim}
#       output_logits: False

encoder:
  class: core.drq_audio_memory.Encoder
  params:
      obs_shape: ${agent.params.obs_shape}
      feature_dim: 50
      lowdim_dim: ${agent.params.lowdim_dim}
      audio_steps: ${audio_steps}
      audio_bins: ${audio_bins}
      audio_feature_dim: ${audio_feature_dim}
      num_layers: 4
      num_filters: 32
      output_dim: 35
      output_logits: False
      
      
#name of the folder directory 
log_dir: ${results_root}${runName}

# hydra configuration
hydra:
  name: ${env}
  run:
    dir: ${log_dir}